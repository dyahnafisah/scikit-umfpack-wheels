env:
    global:
        - REPO_DIR=scikit-umfpack
        # Also see DAILY_COMMIT below
        - BUILD_COMMIT=a2102ef92f4dd060138e72bb5d7c444f8ec49cbc
        - PLAT=x86_64
        - NP_BUILD_DEP="numpy==1.8.2"
        - CYTHON_BUILD_DEP="Cython"
        - NP_TEST_DEP="numpy"
        - UNICODE_WIDTH=32
        - MANYLINUX_URL="https://5cf40426d9f06eb7461d-6fe47d9331aba7cd62fc36c7196769e4.ssl.cf2.rackcdn.com"
        - WHEELHOUSE_UPLOADER_USERNAME=travis-worker
        # Following generated with
        # travis encrypt -r scikit-umfpack/scikit-umfpack-wheels WHEELHOUSE_UPLOADER_SECRET=<the api key>
        - secure: "QDJbf5XJFcaJEVxDbDOLwH2IpRfSTfWpdwgOfdFjL326ah2FpmBgnYOO810eYbKHSv0EGmHaO28Sg2iA3dH0dFu3qdD7EPYpRrNVQl2OQuMfk3x7eFkpKqLGUzjo3ck6XNBUqBec00Uhy2FvYoZFxEkjtXMHSQ3wjOd1EfXiHbJ8GdsCKDzuVb8TDlGuBfb6xjtPhnJ7VdGEHhpm5qBOK6b26KxAGhJqgW6KKIgytOIhM+DsCSrCMva41DF+u19PdJtgkLqUqBRTm3JseTBg1X8B7aYdWjQeskDmqrdYSiTenXiqGsK6ghTSHKY6E8jwlslICMeVN6bMkHSL46/WuAROhypQe814xqrCYMgC7UZ6pdh0S6RbNjrPiRDAzojg6yVPmPRbVTGpSryGP2W9lyVAkXPbhbt54OqUKk+z9ILbMVFq66hyrVPBP+TNEywpNNgBrUxGkAmu2ckZcbzUMbOm3kHyUV7EuUQrrn7B6egzDm0r8owhOyGDpKWyQuVbBfpc52HlQ+LLiP9dhoLaFuEyvbZbx1dyvi9bGi6Kq33M6+D4Tiq8HCvVSyGD7dkn6n1N9aDFm+3ZCXomttoG8CCfevy9OI/50svUoAmnu1VdUSv+1ZqEybupzdSn/aOnLtSZtmzphe4I6R6/CgcaykWCjPSJxJh80j9aIS7p6P0="
        # Commit when running from daily branch
        - DAILY_COMMIT=master

language: python
# Default Python version is usually 2.7
python: 3.5
sudo: required
dist: trusty
services: docker
branches:
  only:
  - master

matrix:
  exclude:
      # Exclude the default Python 3.5 build
      - python: 3.5
  include:
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.4
        # Python 3.4 needs more recent numpy (for testing only)
        - NP_TEST_DEP=numpy==1.9.3
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.4
        - PLAT=i686
        - NP_TEST_DEP=numpy==1.9.3
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - NP_BUILD_DEP=numpy==1.9.3
        - NP_TEST_DEP=numpy==1.9.3
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - PLAT=i686
        - NP_BUILD_DEP=numpy==1.9.3
        - NP_TEST_DEP=numpy==1.9.3
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - NP_BUILD_DEP=numpy==1.11.3
        - NP_TEST_DEP=numpy==1.11.3
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=i686
        - NP_BUILD_DEP=numpy==1.11.3
        - NP_TEST_DEP=numpy==1.11.3
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=2.7
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.4
        - NP_TEST_DEP=numpy==1.9.3
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.5
        # OSX build of scipy on Python 3.5 needs built 1.8.2 wheel to avoid
        # https://github.com/numpy/numpy/issues/6204.  numpy 1.8.2 wheel for
        # Python 3.5 at nipy manylinux URL.
        - NP_BUILD_DEP=numpy==1.8.2
        - NP_TEST_DEP=numpy==1.9.3
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.6
        - NP_BUILD_DEP=numpy==1.11.3
        - NP_TEST_DEP=numpy==1.11.3

before_install:
    - if [ "$TRAVIS_BRANCH" == "daily" ]; then
          CONTAINER="pre-release";
          BUILD_COMMIT=${DAILY_COMMIT:-$BUILD_COMMIT};
      else
          CONTAINER=wheels;
          UPLOAD_ARGS="--no-update-index";
      fi
    - BUILD_DEPENDS="$NP_BUILD_DEP $CYTHON_BUILD_DEP"
    - TEST_DEPENDS="$NP_TEST_DEP pytest pytest-xdist pytest-faulthandler pytest-env nose scipy"
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
    # Upload wheels to Rackspace container
    - pip install wheelhouse-uploader
    - python -m wheelhouse_uploader upload --local-folder
          ${TRAVIS_BUILD_DIR}/wheelhouse/
          $UPLOAD_ARGS
          $CONTAINER
